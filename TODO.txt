0. Есть три варианта генерации верхних блоков: (+-)
     I.  Сплошняком (+)
     II. По картам уровней, которые хранятся в файлах или в ресурсах -

1. Все ключее элементы игры есть Qt-виджеты (+)

2. Платформа: (+)
    Отображается внизу главного игрового виджета и тоже виджет. (+)
    Она подвижная и перемещается с помощью: (+)
        I. клавиш на клавиатуре (+)
        II. мышки (+)


3. Верхние блоки хранятся в двумерном QVector (+)

4. Имеется Шарик, который двигается после отскока от платформы, он является виджетом:
        I.   Шарик круглый, константного размера. (+)
        III. Шарик хранит угол полёта от 0 до 360 градусов по которому будет летать. (+)
        IV.  Шарик начинает полёт после клика ЛКМ или нажатия на пробел. (+)
        V.   Шарик умеет менять угол полёта при столкновении с объектами.
             Основные вычисления полёта шарика вынесены в отдельный файл. (+)
        VI.  Шарик может  обрабатывать столкновения с тремя видами объектов:
                        *: стенка (+)
                        *: платформа (+)
                        *: блок (+)
        VII. Шарик умеет прерывисто летать под углом посредством вызова
             соответвующего метода. (+)
        VIII.Шарик отскакивает от объектов по правилу
             "Угол столкновения равен углу отражения" (+)
        IX.  После клика ЛКМ или SPACE шарик отправляется в полёт. (+)
        X.   После соприкосновения с платфомой шарик отражается и
             летит дальше. (+)
        XI.  Обсчитываются столкновения шарика с блоками, после столкновения с блоком
             блок исчезает а шарик отскакивает. (+)
        XII. При соприкосновении с нижним краем шарика игровой тур обнуляется и вычитается
             одна "Жизнь". -
        XIII.Некоторые призы выпавшие из блоков меняют состояние
             и механику работы платформы. -

//===================================================================================
//===================================================================================
5. >>> Сделать экран отображения игрового состояния. Экран игрового состояния должен
с лёкгостью поддерживать перезагрузку уровня, рестарт уровня, загрузку нового уровня.
Также должен с легкостью поддерживать работу и отображение основных параметров игры.
На игровом экране отобажаются:
        I.   SCORE - счёт текущего уровня. -
        II.  HIGH_SCORE - максимальный счёт в одном из прошлых уровней -
        II.  LEVEL - номер текущего уровня. -
        III. Количество оставшихся жизней числами. -
        IX.  Список текущих призов в виде пиктограмм. (+-)
//-----------------------------------------------------------------------------------
6. >>> Из блоков выпадают призы:
        I.   Призы можно ловить. (+)
        II.  После того, как при пойман он переносится на экран отобажения
             игрового состояния. (+)
        III. Некоторые из призов имеют срок действия - другие
                                        же постоянные, как приз "Жизнь". (+-)
        IV.  У каждого приза есть своя картинка-капсула. (+-)
        V.   Призы издают звуки. (-)
        VI.  По истечении времени действия приза - он удаляется из прибора наблюдения
             и все его действия на механику игры отменяются. (+)
//-----------------------------------------------------------------------------------
7. >>> Виды призов-капсул:
        I.   (Expand — «расширять») — увеличивает платформу в 2 раза.(+)
        II.
        III. (Laser — «лазер») — устанавливает на платформу
             лазерную установку, которая может разрушать кирпичи лазером.(-)
        IV.  (Slow — «медленный») — замедляет шар.(-)
        V.   (Pointer «указка» ) - отображает луч указки, который
                                      подсказывает траекторию шарика.(-)
        VI.  (Catch — «ловить») — платформа ловит шарик. а не отбивает его.(+)
        VII. (Life — «жизнь») — дополнительная жизнь.(+)
//===================================================================================
//===================================================================================

8. Подключить сторонние вычурные шрифты. (+)

9. Реализовать звуки и подключить сторонние звуковые файлы. (+-)


10. ... Игра реализована как линейный статичный набор игровых сцен хранящихся в
   CSV-файлах. Игровая сцена записана в файлах формата CSV, и содержит в себе
   следующие описательные поля:
   LevelFileVersion - версия формата файла
   LevelNumber      - номер уровня
   LevelNameEn      - имя сцены на английском языке
   LevelNameRu      - имя сцены на русском языке
   BackroundImage   - фоновая картинка уровня
   Ниже описательных полей идёт таблица с именами блоков.
   Для загрузки сцен в запущенную игру применяется класс-загрузчик
   SceneLoader. Он умеет переводить имена блоков из CSV-файла и инстанцировать
   соответсвующие блоки-виджеты на игровом фрейме.
   Дальнейшее расширение типов блоков может быть осуществлено через объявление
   и наследование классов производных от SceneLoader.

11. ... Игру можно сохранять в список сохранения и потом возвращаться назад.
12. ...   При сохранении сохраняется состояние блоков на игровом поле,
   а также все параметры игрового состояния из панели справа.

13. ... Сделать настройку, которая включает или отключает "подсчёт жизней"
    при игре в этот арканоид.
 Сделать анимированные верхние блоки.

14. ... Окно игры поддерживает ресайз - изменение размера.


